package com.media.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.media.models.User;
import com.media.repository.UserRepository;

@RestController
public class UserController {
	
	@Autowired
	UserRepository userRepository;
	
	@PostMapping("/users")
	public User createUser(@RequestBody User user ) {
		
		User newUser = new User();
		newUser.setId(user.getId());
		newUser.setFirstName(user.getFirstName());
		newUser.setLastName(user.getLastName());
		newUser.setEmail(user.getEmail());
		newUser.setPassword(user.getPassword());
		
		User savedUser = userRepository.save(newUser);
		
		
		return savedUser;
	}
	
	

	@GetMapping("/users")
	public List<User> getUsers() {
		
		List<User> users = userRepository.findAll();
		return users;
		
	}
	
	
	@GetMapping("/users/{userid}")
	public User getUserById(@PathVariable("userid") Integer id) throws Exception {
			
		Optional<User> user = userRepository.findById(id);
		
		if(user.isPresent())
			return user.get();
		
		throw new Exception("User not exists with userid "+id);
	}
	
	
	
	
	@PutMapping("/users/{userId}")
	public User updateUser(@RequestBody User user,@PathVariable("userId") Integer id) {
		
		Optional<User> user1 = userRepository.findById(id);
		
		if(user1.isPresent())
			return user1.get();
		
		throw new Exception("User not exists with userid "+id);
		
		
//		User user1 = new User(1,"John","Abraham","johnabraham@gmail.com","12345678");
//		
//		if(user.getFirstName() != null) {
//			user1.setFirstName(user.getFirstName());
//		}
//		
//		if(user.getLastName() != null) {
//			user1.setLastName(user.getLastName());
//		}
//		
//		if(user.getEmail() != null) {
//			user1.setEmail(user.getEmail());
//		}
//		
		return user1;
	}
	
	
	@DeleteMapping("/users/{userId}")
	public String deleteUser(@PathVariable Integer userId) {
		
		return "user deleted successfully with id "+userId;
	}
	
}
