package com.media.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.media.models.User;
import com.media.repository.UserRepository;
import com.media.service.UserService;

@RestController
public class UserController {
	
	@Autowired
	UserRepository userRepository;
	
	@Autowired
	UserService userService;
	
	@PostMapping("/users")
	public User createUser(@RequestBody User user ) {
		
		User savedUser = userService.registerUser(user);
		return savedUser;
	}
	
	

	@GetMapping("/users")
	public List<User> getUsers() {
		
		List<User> users = userRepository.findAll();
		return users;
		
	}
	
	
	@GetMapping("/users/{userid}")
	public User getUserById(@PathVariable("userid") Integer id) throws Exception {
		  User user = userService.findUserById(id);
		  
		  return user;
	}
	
	
	
	
	@PutMapping("/users/{userId}")
	public User updateUser(@RequestBody User user,@PathVariable("userId") Integer id) throws Exception {
		
		User updatedUser = userService.updateUser(user, id);
		
		return updatedUser;
		
	}
	
	@PutMapping("/users/{userId1}/{userId2}")
	public User followUserHandler(@PathVariable Integer userId1,@PathVariable Integer userId2) {
		
		return null;
	}
	
	@DeleteMapping("/users/{userId}")
	public String deleteUser(@PathVariable Integer userId) throws Exception {
		

		Optional<User> user1 = userRepository.findById(userId);
		
		if(user1.isEmpty())
			throw new Exception("User not exists with userid "+userId);
		
		userRepository.deleteById(userId);
		
		return "user deleted successfully with id "+userId;
	}
	
}
