package com.media.service;

import java.time.LocalDateTime;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;

import com.media.models.Comment;
import com.media.models.Post;
import com.media.models.User;
import com.media.repository.CommentRepository;
import com.media.repository.PostRepository;

public class CommentServiceImpl implements CommentService {

	@Autowired
	private UserService userService;

	@Autowired
	private PostService postService;

	@Autowired
	private CommentRepository commentRepository;

	@Autowired
	private PostRepository postRepository;

	@Override
	public Comment createComment(Comment comment, Integer postId, Integer userId) throws Exception {

		User user = userService.findUserById(userId);

		Post post = postService.findPostById(postId);

		Comment newComment = new Comment();

		newComment.setUser(user);
		newComment.setContent(comment.getContent());
		newComment.setCreatedAt(LocalDateTime.now());

		Comment savedComment = commentRepository.save(newComment);

		post.getComments().add(savedComment);

		postRepository.save(post);

		return savedComment;
	}

	@Override
	public Comment findCommentById(Integer commentId) throws Exception {

		Optional<Comment> comment = commentRepository.findById(commentId);
		if (comment.isEmpty())
			throw new Exception("Comment not found with the commentId " + commentId);

		return comment.get();
	}

	@Override
	public Comment likeComment(Integer commentId, Integer userId) throws Exception {

		Comment comment = findCommentById(commentId);

		User user = userService.findUserById(userId);

		if (!comment.getLiked().contains(user)) {
			comment.getLiked().add(user);
		}else {
			comment.getLiked().remove(user);
		}
		return null;
	}

}
